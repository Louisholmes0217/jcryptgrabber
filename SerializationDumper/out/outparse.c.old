/*
 * This program takes the output generated by the tshark command,
 * and searches the data for java objects. If an object is found,
 * the program saves the object into a file with a name relating
 * to its source and destination IP, as well as its tcp.stream value */


#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>

int main(int argc, char *argv[])
{
	// Opening a file
	FILE *fp = fopen(argv[1], "r");
	char c = fgetc(fp);
	char oldstream[40];
	bool isstart = true;
	char newstream[40];
	char oldaddress[40];
	char newaddress[40];
	// Seaching each byte of the file
	
		while(c != EOF)
		{	
			char data[1000];
			int counter = 0;
			int datacounter = 0;
			
			// Grabbing index stream
			while(!isblank(c))
			{
			//	printf("%c", c);
				newstream[counter] = c;
				c = fgetc(fp);
				counter++;
			}
			while(counter < sizeof(newstream))
			{
				newstream[counter] = '\0';
				counter++;
			}

			c = fgetc(fp);
			counter = 0;
			// Grabbing IP addresses
			while(!isblank(c))
			{
			//	printf("%c", c);
				newaddress[counter] = c;
				c = fgetc(fp);
				counter++;
			}

			while(counter < sizeof(newaddress))
			{
				newaddress[counter] = '\0';
				counter++;
			}


			c = fgetc(fp);
			counter = 0;

			// Grabbing data
			while(c != '\n')
			{
			//	printf("%c", c);
				data[counter] = c;
				c = fgetc(fp);
				counter++;
			}
			c = fgetc(fp);
			while(counter < sizeof(data))
			{
				data[counter] = '\0';
				counter++;
			}
	
			// Comparing if the new address and old is the same
			counter = 0;
			if(!strcmp(oldaddress, newaddress))
			{
				printf("%s", data);
			}
			else
			{
				if(!isstart)
				{
					printf("\n");
					printf("%s:%s:%s", newstream, newaddress, data);
				}
				else 
				{
					printf("%s:%s:%s", newstream, newaddress, data);
				}
			}
			isstart = false;
			strncpy(oldstream, newstream, 40);
			strncpy(oldaddress, newaddress, 40);
		}
		printf("\n");
		fclose(fp);
		return 0;
	}
